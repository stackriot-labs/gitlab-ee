- show_roles = local_assigns.fetch(:show_roles, true)
- show_controls = local_assigns.fetch(:show_controls, true)
- user = local_assigns.fetch(:user, member.user)
- source = member.source
- can_admin_member = can?(current_user, action_member_permission(:update, member), member)
- update_url = member.type == 'GroupMember' ? group_group_member_path(@group, member) : namespace_project_project_member_path(@project.namespace, @project, member)

%li.member{ class: [dom_class(member), ("is-overriden" if member.override)], id: dom_id(member) }
  %span.list-item-name
    - if user
      = image_tag avatar_icon(user, 40), class: "avatar s40", alt: ''
      %strong
        = link_to user.name, user_path(user)
      %span.cgray= user.to_reference

      - if user == current_user
        %span.label.label-success.prepend-left-5 It's you

      - if user.blocked?
        %label.label.label-danger
          %strong Blocked

      - if source.instance_of?(Group) && !@group
        = link_to source, class: "member-group-link prepend-left-5" do
          = "· #{source.name}"

      .hidden-xs.cgray
        - if member.request?
          Requested
          = time_ago_with_tooltip(member.requested_at)
        - else
          Joined #{time_ago_with_tooltip(member.created_at)}
        - if member.expires?
          ·
          %span{ class: ('text-warning' if member.expires_soon?) }
            Expires in #{distance_of_time_in_words_to_now(member.expires_at)}

      - if member.ldap
        %span.label.label-info.pull-right.visible-xs-block
          LDAP

    - else
      = image_tag avatar_icon(member.invite_email, 40), class: "avatar s40", alt: ''
      %strong= member.invite_email
      .cgray
        Invited
        - if member.created_by
          by
          = link_to member.created_by.name, user_path(member.created_by)
        = time_ago_with_tooltip(member.created_at)
  - if show_roles
    .controls.member-controls
      - if member.ldap
        %span.label.label-info.members-ldap.hidden-xs
          LDAP
      - if show_controls
        - if user != current_user
          = form_for member, remote: true, html: { class: 'form-horizontal js-edit-member-form' } do |f|
            = f.hidden_field :access_level
            -# = f.select :access_level, options_for_select(member.class.access_level_roles, member.access_level), {}, class: 'form-control member-form-control append-right-5 js-member-update-control', id: "member_access_level_#{member.id}", disabled: !can_admin_member
            .member-form-control.dropdown.append-right-5
              %button.dropdown-menu-toggle.js-member-permissions-dropdown{ type: "button",
                disabled: member.ldap && !member.override,
                data: { toggle: "dropdown", field_name: "#{f.object_name}[access_level]" } }
                %span.dropdown-toggle-text
                  = member.human_access
                = icon("caret-down")
              .dropdown-menu.dropdown-select.dropdown-menu-align-right.dropdown-menu-selectable
                = dropdown_title("Change permissions")
                .dropdown-content
                  %ul
                    - Gitlab::Access.options.each do |role, role_id|
                      %li
                        %a{ href: "javascript:void(0)",
                          class: ("is-active" if member.access_level == role_id),
                          data: { id: role_id } }
                          = role
                    - if member.ldap
                      %li.divider
                      %li
                        %a{ href: "javascript:void(0)",
                          data: { revert: "true", endpoint: update_url, id: dom_id(member) } }
                          Revert to LDAP group sync settings
            .prepend-left-5.clearable-input.member-form-control
              = f.text_field :expires_at, class: 'form-control js-access-expiration-date js-member-update-control', placeholder: 'Expiration date', id: "member_expires_at_#{member.id}", disabled: !can_admin_member
              %i.clear-icon.js-clear-input
        - else
          %span.member-access-text= member.human_access

        - if member.invite? && can?(current_user, action_member_permission(:admin, member), member.source)
          = link_to 'Resend invite', polymorphic_path([:resend_invite, member]),
                    method: :post,
                    class: 'btn btn-default  prepend-left-10'

        - elsif member.request? && can_admin_member
          = link_to icon('check inverse'), polymorphic_path([:approve_access_request, member]),
                    method: :post,
                    class: 'btn btn-success prepend-left-10',
                    title: 'Grant access'

        - if can?(current_user, action_member_permission(:destroy, member), member) && !member.ldap
          - if current_user == user
            = link_to icon('sign-out', text: 'Leave'), polymorphic_path([:leave, member.source, :members]),
                      method: :delete,
                      data: { confirm: leave_confirmation_message(member.source) },
                      class: 'btn btn-remove prepend-left-10'
          - else
            = link_to member,
                      remote: true,
                      method: :delete,
                      data: { confirm: remove_member_message(member) },
                      class: 'btn btn-remove prepend-left-10',
                      title: remove_member_title(member) do
              %span.visible-xs-block
                Delete
              = icon('trash', class: 'hidden-xs')
        - elsif member.ldap
          %button.btn.btn-default.btn-ldap-override.js-ldap-permissions{ type: "button",
            "aria-label" => "Edit permissions",
            data: { name: user.name, id: dom_id(member) } }
            %span.visible-xs-block.visible-sm-block
              Edit permissions
            = icon("pencil", class: "hidden-xs hidden-sm")
      - else
        %span.member-access-text= member.human_access
- if member.ldap
  %li.alert.alert-member-ldap{ style: "display: none;" }
    %p
      = user.name
      is currently an LDAP user. Editing their permissions will override the settings from the LDAP group sync.
    .controls
      %button.btn.btn-warning.js-ldap-override{ type: "button",
        "aria-label" => "Change LDAP member permissions",
        data: { id: dom_id(member), endpoint: update_url } }
        Change permissions
      %button.btn.btn-default.js-ldap-permissions{ type: "button",
        "aria-label" => "Close permissions override",
        data: { id: dom_id(member) } }
        = icon("times")
