- commit = @repository.commit(tag.dereferenced_target)
- release = @releases.find { |release| release.tag == tag.name }
%li
  %div
    = link_to namespace_project_tag_path(@project.namespace, @project, tag.name) do
      %span.item-title
        = icon('tag')
        = tag.name
    - if tag.message.present?
      &nbsp;
      = strip_gpg_signature(tag.message)

    .controls
      = render 'projects/buttons/download', project: @project, ref: tag.name

      - if can?(current_user, :push_code, @project)
        = link_to edit_namespace_project_tag_release_path(@project.namespace, @project, tag.name), class: 'btn has-tooltip', title: "Edit release notes", data: { container: "body" } do
          = icon("pencil")

      - if can?(current_user, :admin_project, @project)
        = link_to namespace_project_tag_path(@project.namespace, @project, tag.name), class: 'btn btn-remove remove-row has-tooltip', title: "Delete tag", method: :delete, data: { confirm: "Deleting the '#{tag.name}' tag cannot be undone. Are you sure?", container: 'body' }, remote: true do
          = icon("trash-o")

  - if commit
    = render 'projects/branches/commit', commit: commit, project: @project
  - else
    %p
      Cant find HEAD commit for this tag
  - if release && release.description.present?
    .description.prepend-top-default
      .wiki
        = preserve do
          = markdown_field(release, :description)
